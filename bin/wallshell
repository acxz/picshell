#!/usr/bin/env bash

# import imageshell functions
# https://stackoverflow.com/q/192292
MY_DIR=$(dirname $(readlink -f $0))
source $MY_DIR/imageshell/imageshell.sh

# Function that prints out the help text
_help() {
    echo "wallshell: Show pictures in the terminal"

    echo ""
    echo "Usage: wallshell [OPTION] PICTURE..."
    printf "  %-20s\t%-54s\n" \
        "-r, --remove-cache" "Remove cache directory" \
        "-h, --help" "Print this help" \

    echo ""
    echo "Random: use \"(+/-)TAG,... \" for PICTURE"
    echo "can add comma separated list for random picture with specified tags"
    echo "add no prefix to TAG if you want to use term as search"
    echo "add a '+' to TAG if you want to include the tag"
    echo "add a '-' to TAG if you want to exclude the tag"
    echo "for multiword tags, use '+' instead of <SPACE>"

    echo ""
    echo "Examples: wallshell city"
    echo "          wallshell mountain,+tree"
    echo "          wallshell raiden-shogun,ratios=portrait"
    echo "          wallshell gohan goku goten"
    echo "          wallshell space,-moon anime,space anime,space"
}

# Handle command line arguments
case "$#" in
    0)
        # display help if no arguments are given
        _help
        echo ""
        echo "You forgot to mention any picture! See help."
        exit
        ;;
    *)
        cache=1
        cache_dir="$HOME/.cache/wallshell"
        start_idx=1

        if [ "$1" == '-r' ] || [ "$1" == '--remove-cache' ]; then
            rm -r -v "$cache_dir"
            exit
        elif [ "$1" == '-h' ] || [ "$1" == '--help' ]; then
            _help
            exit
        fi

        # Create cache directory
        mkdir -p "$cache_dir"

        # Parse description
        images=()
        for tags in "${@:$start_idx}"; do

            # Delimit tags on comma to get tag_arr
            IFS=',' read -ra tag_arr <<< "$tags"

            tag_request=""
            ratios_request=""

            for tag in "${tag_arr[@]}"; do
                if [ "${tag:0:7}" == 'ratios=' ]; then
                    ratios_request="${tag}"
                elif [ "${tag:0:1}" == '+' ]; then
                    tag_request="${tag_request}+%2B${tag}"
                else
                    tag_request="${tag_request}+${tag}"
                fi
            done

            url="https://wallhaven.cc/api/v1/search?q=${tag_request}&${ratios_request}&sorting=random"
            query=$(curl -s "$url")

            id_field=".data[0].id"
            path_field=".data[0].path"

            id=$(jq -n "$query" | jq -r "$id_field")
            path=$(jq -n "$query" | jq -r "$path_field")

            # Delimit path on comma to get tag_arr
            IFS='.' read -ra path_arr <<< "$path"
            file_type=${path_arr[${#path_arr[@]}-1]}

            # TODO: get all_tags
            # create cache file with tags and id
            echo "$tags-$id"

            # Check if image is cached
            is_cached=0
            image="$cache_dir/$tags-$id.$file_type"

            if [ -f "$image" ]; then
                is_cached=1
            fi

            # curl image
            if [ ${is_cached} == 0 ]; then
                curl -sL "$path" -o "$image"
            fi
            images+=("${image}")
        done
        ;;
esac

use_ani=0
scale=1
trim=0
pixel_perfect=0
imgshl_display images $use_ani $scale $trim $pixel_perfect $cache "$cache_dir"
